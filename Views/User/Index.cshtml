@model IEnumerable<PatsyLibrary.Models.User>
@inject IUserService UserService
@inject IUnitOfWorkRepository UnitOfWorkRepository

@{
    ViewData["Title"] = "Usuários";

    string username = UserService.GetUserSession();
    HashSet<short> userPermissions = null; // Declara fora do bloco para escopo maior
    if (username != null)
    {
        var user = await UnitOfWorkRepository.UserRepository.GetbyUserName(username);
        userPermissions = user?.Role?.RolePermissions
        .Select(rp => rp.PermissionId)
        .ToHashSet() ?? new HashSet<short>();
    }
}

<h1 class="mb-4"><i class="fas fa-users"></i> @ViewData["Title"]</h1>

<!-- Pesquisa e Filtros -->
<div class="container">
    <div class="row mb-3 d-flex justify-content-between">
        <div class="col-12 col-md-4 d-flex align-items-center mb-2 mb-md-0">
            <input type="text" id="userSearch" class="form-control me-2" placeholder="Pesquisar usuário...">
        </div>
        <div class="col-12 col-md-6 d-flex align-items-center justify-content-md-end mb-2 mb-md-0">

            @if (userPermissions.Contains(000) || userPermissions.Contains(401))
            {
                <button class="btn btn-primary mb-3" id="btnAddUser">
                    <i class="fas fa-plus-circle"></i> Adicionar Novo Usuário
                </button>
            }
           
        </div>
    </div>
</div>

<table class="table table-striped table-bordered">
    <thead class="table-dark">
        <tr>
            <th>Nome do Usuário</th>
            <th>Email</th>
            <th class="text-center">Status</th>
            <th class="text-center">Ações</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var user in Model)
        {
            <tr>
                <td>@user.UserName</td>
                <td>@user.Email</td>
                <td class="text-center">
                    @if (user.IsActive)
                    {
                        <span class="badge bg-success">Ativo</span>
                    }
                    else
                    {
                        <span class="badge bg-danger">Inativo</span>
                    }
                </td>
                <td class="text-center">

                    @if (userPermissions.Contains(000) || userPermissions.Contains(402))
                    {
                        <button class="btn btn-warning btn-sm btn-update" data-id="@user.UserId">
                            <i class="fas fa-edit"></i>
                        </button>
                    }

                    @if (userPermissions.Contains(000) || userPermissions.Contains(403))
                    {
                        <button class="btn btn-danger btn-sm btn-delete" data-id="@user.UserId">
                            <i class="fas fa-trash-alt"></i>
                        </button>
                    }

                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Modal -->
<div class="modal fade" id="genericModal" aria-labelledby="genericModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="genericModalLabel">Adicionar Usuário</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="genericFormContainer">
                <!-- O formulário será carregado aqui via AJAX -->
            </div>
        </div>
    </div>
</div>

<!-- Scripts -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
    $(document).ready(function () {
        // Verifica se há uma mensagem de sessão expirada ao carregar a página
        $.get("@Url.Action("Index", "User")", function (data) {
            if (data && data.success === false && data.message && data.message.includes("Você foi desconectado")) {
                Swal.fire({
                    icon: 'error',
                    title: 'Sessão Expirada',
                    text: data.message,
                    confirmButtonText: 'OK'
                }).then(() => {
                    window.location.href = "@Url.Action("Login", "Account")";
                });
            }
        });

        // Adicionar Usuário
        $("#btnAddUser").click(function () {
            $.get("@Url.Action("Insert", "User")", function (data) {
                // Verifica se o retorno é um JSON de sessão expirada
                if (data && data.success === false && data.message && data.message.includes("Você foi desconectado")) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Sessão Expirada',
                        text: data.message,
                        confirmButtonText: 'OK'
                    }).then(() => {
                        window.location.href = "@Url.Action("Login", "Account")";
                    });
                } else {
                    $("#genericFormContainer").html(data);
                    $("#genericModalLabel").text("Adicionar Usuário");
                    $("#genericModal").modal("show");
                }
            });
        });

        // Editar Usuário
        $(".btn-update").click(function () {
            var id = $(this).data("id");
            $.get("@Url.Action("Update", "User")", { id: id }, function (data) {
                // Verifica se o retorno é um JSON de sessão expirada
                if (data && data.success === false && data.message && data.message.includes("Você foi desconectado")) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Sessão Expirada',
                        text: data.message,
                        confirmButtonText: 'OK'
                    }).then(() => {
                        window.location.href = "@Url.Action("Login", "Account")";
                    });
                } else {
                    $("#genericFormContainer").html(data);
                    $("#genericModalLabel").text("Editar Usuário");
                    $("#genericModal").modal("show");
                }
            });
        });

        // Excluir Usuário
        $(".btn-delete").click(function () {
            var id = $(this).data("id");
            Swal.fire({
                title: "Tem certeza?",
                text: "Essa ação não pode ser desfeita!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#d33",
                cancelButtonColor: "#3085d6",
                confirmButtonText: "Sim, excluir!",
                cancelButtonText: "Cancelar"
            }).then((result) => {
                if (result.isConfirmed) {
                    $.post("@Url.Action("Delete", "User")", { id: id })
                        .done(function (response) {
                            if (response && response.message && typeof response.message === 'string' && response.message.includes("Você foi desconectado")) {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Sessão Expirada',
                                    text: response.message,
                                    confirmButtonText: 'OK'
                                }).then(() => {
                                    window.location.href = "@Url.Action("Login", "Account")";
                                });
                            } else if (response.success) {
                                Swal.fire("Excluído!", response.message, "success");
                                $("button[data-id='" + id + "']").closest("tr").remove();
                            } else {
                                Swal.fire("Erro!", response.message, "error");
                            }
                        })
                        .fail(function () {
                            Swal.fire("Erro!", "Não foi possível excluir. Tente novamente.", "error");
                        });
                }
            });
        });

        // Submissão do formulário
        $(document).on('submit', '#userForm', function (e) {
            e.preventDefault();
            var form = $(this);
            var actionUrl = form.attr('action');
            console.log("Enviando formulário para: " + actionUrl);
            console.log("Dados enviados: " + form.serialize());

            Swal.fire({
                title: 'Enviando...',
                allowOutsideClick: false,
                didOpen: () => {
                    Swal.showLoading();
                }
            });

            $.ajax({
                url: actionUrl,
                type: 'POST',
                data: form.serialize(),
                success: function (response) {
                    Swal.close();
                    console.log("Resposta do servidor: ", response);
                    if (response.success) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Sucesso!',
                            text: response.message
                        }).then(() => {
                            $("#genericModal").modal('hide');
                            location.reload();
                        });
                    } else if (response.message && response.message.includes("Você foi desconectado")) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Sessão Expirada',
                            text: response.message,
                            confirmButtonText: 'OK'
                        }).then(() => {
                            window.location.href = "@Url.Action("Login", "Account")";
                        });
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Erro!',
                            text: response.message || 'Erro ao processar.'
                        });
                    }
                },
                error: function (xhr, status, error) {
                    Swal.close();
                    console.error("Erro AJAX: ", status, error);
                    Swal.fire({
                        icon: 'error',
                        title: 'Erro!',
                        text: 'Ocorreu um erro ao enviar. Veja o console para detalhes.'
                    });
                }
            });
        });

        // Filtro de nome (Pesquisa)
        $("#userSearch").on("keyup", function () {
            var value = $(this).val().toLowerCase();
            $("table tbody tr").filter(function () {
                $(this).toggle($(this).find("td:eq(0)").text().toLowerCase().indexOf(value) > -1);
            });
        });
    });
</script>