@model IEnumerable<BookPublisher>

@{
    ViewData["Title"] = "Editoras de Livros";
}

<h1 class="mb-4"><i class="fas fa-building"></i> @ViewData["Title"]</h1>

<!-- Pesquisa e Filtros -->
<div class="container">
    <div class="row mb-3 d-flex justify-content-between">
        <div class="col-12 col-md-4 d-flex align-items-center mb-2 mb-md-0">
            <input type="text" id="bookPublisherSearch" class="form-control me-2" placeholder="Pesquisar editora...">
        </div>

        <!-- Botão de Adicionar -->
        <div class="col-12 col-md-6 d-flex align-items-center justify-content-md-end mb-2 mb-md-0">
            <button class="btn btn-primary mb-3" id="btnAddBookPublisher">
                <i class="fas fa-plus-circle"></i> Adicionar Nova Editora
            </button>
        </div>
    </div>
</div>

<!-- Tabela -->
<table class="table table-striped table-bordered">
    <thead class="table-dark">
        <tr>
            <th>Nome da Editora</th>
            <th class="text-center">Ações</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var bookPublisher in Model)
        {
            <tr>
                <td>@bookPublisher.Name</td>
                <td class="text-center">
                    <button class="btn btn-warning btn-sm btn-update" data-id="@bookPublisher.BookPublisherId">
                        <i class="fas fa-edit"></i>
                    </button>
                    <button class="btn btn-danger btn-sm btn-delete" data-id="@bookPublisher.BookPublisherId">
                        <i class="fas fa-trash-alt"></i>
                    </button>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Modal -->
<div class="modal fade" id="genericModal" aria-labelledby="genericModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="genericModalLabel">Adicionar Editora</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="genericFormContainer">
                <!-- O formulário será carregado aqui via AJAX -->
            </div>
        </div>
    </div>
</div>

<!-- Scripts -->
<!-- Carregar o jQuery -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<!-- Scripts -->
<script>
    $(document).ready(function () {
        // Adicionar Editora
        $("#btnAddBookPublisher").click(function () {
            $.get("@Url.Action("Insert", "BookPublisher")", function (data) {
                $("#genericFormContainer").html(data);
                $("#genericModalLabel").text("Adicionar Editora");
                $("#genericModal").modal("show");
            });
        });

        // Editar Editora
        $(".btn-update").click(function () {
            var id = $(this).data("id");
            $.get("@Url.Action("Update", "BookPublisher")", { id: id }, function (data) {
                $("#genericFormContainer").html(data);
                $("#genericModalLabel").text("Editar Editora");
                $("#genericModal").modal("show");
            });
        });

        // Excluir Editora
        $(".btn-delete").click(function () {
            var id = $(this).data("id");

            Swal.fire({
                title: "Tem certeza?",
                text: "Essa ação não pode ser desfeita!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#d33",
                cancelButtonColor: "#3085d6",
                confirmButtonText: "Sim, excluir!",
                cancelButtonText: "Cancelar"
            }).then((result) => {
                if (result.isConfirmed) {
                    $.post("@Url.Action("Delete", "BookPublisher")", { id: id })
                        .done(function (response) {
                             // Verifica se o response contém a mensagem de desconexão
                        if (response && response.message && typeof response.message === 'string' && response.message.includes("Você foi desconectado")) {
                            window.location.reload(); // Força o reload
                        } else if (response.success) {
                                Swal.fire("Excluído!", response.message, "success");
                                $("button[data-id='" + id + "']").closest("tr").fadeOut(); // Remove da tabela sem recarregar
                            } else {
                                Swal.fire("Erro!", response.message, "error");
                            }
                        })
                        .fail(function () {
                            Swal.fire("Erro!", "Não foi possível excluir. Tente novamente.", "error");
                        });
                }
            });
        });

        // Submissão do formulário
        $(document).on('submit', '#bookPublisherForm', function (e) {
            e.preventDefault();

            var form = $(this);
            var actionUrl = form.attr('action');
            Swal.fire({
                title: 'Enviando...',
                allowOutsideClick: false,
                didOpen: () => {
                    Swal.showLoading();
                }
            });

            $.ajax({
                url: actionUrl,
                type: 'POST',
                data: form.serialize(),
                success: function (response) {
                    Swal.close();
                    if (response.success) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Sucesso!',
                            text: response.message
                        }).then(() => {
                            $("#genericModal").modal('hide');
                            location.reload();
                        });
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Erro!',
                            text: response.message || 'Erro ao editar editora.'
                        });
                    }
                },
                error: function () {
                    Swal.close();
                    Swal.fire({
                        icon: 'error',
                        title: 'Erro!',
                        text: 'Ocorreu um erro ao processar a solicitação. Tente novamente.'
                    });
                }
            });
        });

        // Filtro de pesquisa
        $("#bookPublisherSearch").on("keyup", function () {
            var value = $(this).val().toLowerCase();
            $("table tbody tr").filter(function () {
                $(this).toggle($(this).find("td:eq(0)").text().toLowerCase().indexOf(value) > -1);
            });
        });
    });
</script>