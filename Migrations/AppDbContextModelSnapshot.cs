// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PatsyLibrary.Data;

#nullable disable

namespace PatsyLibrary.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PatsyLibrary.Entities.RolePermission", b =>
                {
                    b.Property<short>("RoleId")
                        .HasColumnType("smallint");

                    b.Property<short>("PermissionId")
                        .HasColumnType("smallint");

                    b.HasKey("RoleId", "PermissionId");

                    b.HasIndex("PermissionId");

                    b.ToTable("RolePermissions", (string)null);
                });

            modelBuilder.Entity("PatsyLibrary.Models.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("BookId"));

                    b.Property<short>("AmountPage")
                        .HasColumnType("smallint");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<short?>("BookGenderId")
                        .HasColumnType("smallint");

                    b.Property<short?>("BookPublisherId")
                        .HasColumnType("smallint");

                    b.Property<int?>("BookStatusBookId")
                        .HasColumnType("integer");

                    b.Property<short?>("BookStatusId")
                        .HasColumnType("smallint");

                    b.Property<byte[]>("CoverImage")
                        .HasColumnType("bytea");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<short>("DepartmentId")
                        .HasColumnType("smallint");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("character varying(13)");

                    b.Property<string>("Language")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<DateTime>("LastUpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PublicationYear")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("Sinopse")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("character varying(5000)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("BookId");

                    b.HasIndex("BookGenderId");

                    b.HasIndex("BookPublisherId");

                    b.HasIndex("BookStatusBookId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("PatsyLibrary.Models.BookGender", b =>
                {
                    b.Property<short>("BookGenderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<short>("BookGenderId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("BookGenderId");

                    b.ToTable("BookGenders");
                });

            modelBuilder.Entity("PatsyLibrary.Models.BookPublisher", b =>
                {
                    b.Property<short>("BookPublisherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<short>("BookPublisherId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("BookPublisherId");

                    b.ToTable("BookPublishers");
                });

            modelBuilder.Entity("PatsyLibrary.Models.BookStatus", b =>
                {
                    b.Property<int>("BookId")
                        .HasColumnType("integer");

                    b.Property<string>("Comments")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRead")
                        .HasColumnType("boolean");

                    b.Property<string>("Provenance")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<float>("Rating")
                        .HasColumnType("real");

                    b.Property<DateTime?>("ReadDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Shelf")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("ShelfLetter")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.HasKey("BookId");

                    b.ToTable("BookStatus");
                });

            modelBuilder.Entity("PatsyLibrary.Models.Department", b =>
                {
                    b.Property<short>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<short>("DepartmentId"));

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("DepartmentId");

                    b.ToTable("Departments", (string)null);
                });

            modelBuilder.Entity("PatsyLibrary.Models.Permission", b =>
                {
                    b.Property<short>("PermissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<short>("PermissionId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("PermissionId");

                    b.ToTable("Permissions", (string)null);
                });

            modelBuilder.Entity("PatsyLibrary.Models.Role", b =>
                {
                    b.Property<short>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<short>("RoleId"));

                    b.Property<short>("DepartmentId")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("RoleId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Roles", (string)null);
                });

            modelBuilder.Entity("PatsyLibrary.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserId"));

                    b.Property<short>("DepartmentId")
                        .HasColumnType("smallint");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("PassWord")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<short>("RoleId")
                        .HasColumnType("smallint");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("UserId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PatsyLibrary.Entities.RolePermission", b =>
                {
                    b.HasOne("PatsyLibrary.Models.Permission", "Permission")
                        .WithMany("RolePermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PatsyLibrary.Models.Role", "Role")
                        .WithMany("RolePermissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("PatsyLibrary.Models.Book", b =>
                {
                    b.HasOne("PatsyLibrary.Models.BookGender", "BookGender")
                        .WithMany("Books")
                        .HasForeignKey("BookGenderId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("PatsyLibrary.Models.BookPublisher", "BookPublisher")
                        .WithMany("Books")
                        .HasForeignKey("BookPublisherId");

                    b.HasOne("PatsyLibrary.Models.BookStatus", "BookStatus")
                        .WithMany("Books")
                        .HasForeignKey("BookStatusBookId");

                    b.HasOne("PatsyLibrary.Models.Department", "Department")
                        .WithMany("Books")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BookGender");

                    b.Navigation("BookPublisher");

                    b.Navigation("BookStatus");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("PatsyLibrary.Models.BookStatus", b =>
                {
                    b.HasOne("PatsyLibrary.Models.Book", null)
                        .WithOne()
                        .HasForeignKey("PatsyLibrary.Models.BookStatus", "BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PatsyLibrary.Models.Role", b =>
                {
                    b.HasOne("PatsyLibrary.Models.Department", "Department")
                        .WithMany("Roles")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("PatsyLibrary.Models.User", b =>
                {
                    b.HasOne("PatsyLibrary.Models.Department", "Department")
                        .WithMany("Users")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PatsyLibrary.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("PatsyLibrary.Models.BookGender", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("PatsyLibrary.Models.BookPublisher", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("PatsyLibrary.Models.BookStatus", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("PatsyLibrary.Models.Department", b =>
                {
                    b.Navigation("Books");

                    b.Navigation("Roles");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("PatsyLibrary.Models.Permission", b =>
                {
                    b.Navigation("RolePermissions");
                });

            modelBuilder.Entity("PatsyLibrary.Models.Role", b =>
                {
                    b.Navigation("RolePermissions");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
